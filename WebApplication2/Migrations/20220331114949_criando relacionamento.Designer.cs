// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using models;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20220331114949_criando relacionamento")]
    partial class criandorelacionamento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("WebApplication2.Models.Clientes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<string>("dataNascimento")
                        .HasColumnType("text");

                    b.Property<string>("nomeCliente")
                        .HasColumnType("text");

                    b.Property<int>("produtoId")
                        .HasColumnType("int");

                    b.Property<string>("sobrenomeCliente")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("produtoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WebApplication2.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nomeDeUsuario")
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("WebApplication2.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vendedor");
                });

            modelBuilder.Entity("models.Produtos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nomeProduto")
                        .HasColumnType("text");

                    b.Property<int>("quantidadeProduto")
                        .HasColumnType("int");

                    b.Property<decimal>("valorProduto")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("models.Vendas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("nomeCliente")
                        .HasColumnType("text");

                    b.Property<string>("nomeProduto")
                        .HasColumnType("text");

                    b.Property<int>("quantidadeComprada")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("vendas");
                });

            modelBuilder.Entity("WebApplication2.Models.Clientes", b =>
                {
                    b.HasOne("models.Produtos", "Produto")
                        .WithMany("Cliente")
                        .HasForeignKey("produtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("models.Produtos", b =>
                {
                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
